I"°<h1 id="mission">Mission</h1>

<p>Set up a simple React website using SASS/SCSS and Bootstrap.</p>

<h1 id="assumptions">Assumptions</h1>

<p>An existing React web application (see the docs on
<a href="https://reactjs.org/docs/create-a-new-react-app.html">How to create a react app</a>  if you need help), and 
<code class="highlighter-rouge">npm</code> installed.</p>

<h1 id="1-install-node-sass">1. Install node-sass</h1>

<p><code class="highlighter-rouge">npm install --save node-sass</code></p>

<p>The node-sass module adds the SASS preprocessor to your React project,
allowing you to write SASS/SCSS (which browsers donâ€™t understand) and
have it come out as CSS (which browser do understand).</p>

<h1 id="2-add-styles-to-components">2. Add styles to components</h1>

<p>Itâ€™s generally recommended to keep React components completely
self-contained, which implies that each component should have its
own stylesheet. For example, this is how Iâ€™ve implemented my <code class="highlighter-rouge">NavBar</code>
component.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- src
  |- components
     |- NavBar
        |- NavBar.js
        |- NavBar.scss     
</code></pre></div></div>

<p>SCSS can be added to <code class="highlighter-rouge">NavBar.js</code>â€¦</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.navBar {
  background-color: #15354e;
}
</code></pre></div></div>

<p>â€¦ and then imported and used in <code class="highlighter-rouge">NavBar.js</code></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import './NavBar.scss';
...
&lt;div className="navBar"&gt;It appears I'm a nav bar.&lt;/div&gt;
</code></pre></div></div>

<h1 id="3-adding-global-styles">3. Adding global styles</h1>

<p>So what about global styling like colour palettes, stored in variables
inside SASS partials?</p>

<p>Create a partial file (NB. the underscore tells the preprocessor that
the file is meant to be included in another file, and donâ€™t create a
standalone CSS file for it)â€¦</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- src
  |- styles
     |- _colours.scss
</code></pre></div></div>

<p>â€¦ add some code â€¦</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$dark-blue: #15354e;
</code></pre></div></div>

<p>â€¦ then load the partial into your componentâ€™s stylesheet, and use
the variable. In this example, weâ€™re replacing the <code class="highlighter-rouge">background-colour</code>
with the imported variable.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@import '../../styles/_colours.scss';
...
.navBar {
  background-color: $dark-blue;
}
</code></pre></div></div>

<h1 id="and-thats-it">And thatâ€™s it!</h1>

<p>Now youâ€™ve got individual component styling, as well a global partials
for storing your site-wide variables.</p>

:ET